services:
  postgres:
    container_name: postgres_container
    image: postgres:latest
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PGDATA
      - POSTGRES_PORT
    volumes:
      - ./postgresql/init_scripts:/docker-entrypoint-initdb.d
      - ./postgresql:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d text_generator_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - isolation-network
  
  dataloader:
    container_name: dataloader_container
    build: data
    volumes:
      - ./data/checkpoints:/home/data/checkpoints
  
  text_generator:
    container_name: text_generator_container
    build: text_generator
    volumes:
      - ./data/checkpoints:/home/text_generator/checkpoints
    environment:
      - POSTGRES_HOST
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - PGDATA
      - POSTGRES_PORT
    ports:
      - "5001:5001"
    networks:
      - isolation-network
    depends_on:
      - dataloader
      - postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '4'
          memory: 8G
      
  telegram_bot:
    container_name: telegram_bot_container
    build: telegram_bot
    environment:
      TG_TOKEN: /run/secrets/telegram_bot_token
    networks:
      - isolation-network
    depends_on:
      - text_generator
    secrets:
      - telegram_bot_token  

secrets:
  telegram_bot_token:
    file: ./telegram_bot/token.txt

networks:
  isolation-network:
    driver: bridge